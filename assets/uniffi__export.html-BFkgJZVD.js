import{_ as s,c as a,b as e,o as p}from"./app-WzcM213c.js";const t={};function l(i,n){return p(),a("div",null,[...n[0]||(n[0]=[e(`<h1 id="uniffi-详解" tabindex="-1"><a class="header-anchor" href="#uniffi-详解"><span>UniFFI 详解</span></a></h1><h2 id="什么是-uniffi" tabindex="-1"><a class="header-anchor" href="#什么是-uniffi"><span>什么是 UniFFI</span></a></h2><p><strong>UniFFI (Unified Foreign Function Interface)</strong> 是 Mozilla 开发的一个工具，用于<strong>自动生成 Rust 代码与其他语言（Kotlin、Swift、Python 等）之间的绑定</strong>。</p><p>简单来说：用 Rust 写一次代码，UniFFI 自动生成让其他语言调用的接口。</p><h2 id="为什么需要-uniffi" tabindex="-1"><a class="header-anchor" href="#为什么需要-uniffi"><span>为什么需要 UniFFI</span></a></h2><h3 id="传统的跨语言调用问题" tabindex="-1"><a class="header-anchor" href="#传统的跨语言调用问题"><span>传统的跨语言调用问题</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// Rust 代码</span></span>
<span class="line"><span class="token attribute attr-name">#[no_mangle]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> b<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span></span>
<span class="line">    a <span class="token operator">+</span> b</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 需要手动为每个目标语言写绑定代码：</span></span>
<span class="line"><span class="token comment">// - Swift: 写 C 头文件 + Swift wrapper</span></span>
<span class="line"><span class="token comment">// - Kotlin: 写 JNI 绑定</span></span>
<span class="line"><span class="token comment">// - Python: 写 CFFI 绑定</span></span>
<span class="line"><span class="token comment">// 非常繁琐且容易出错！</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uniffi-的解决方案" tabindex="-1"><a class="header-anchor" href="#uniffi-的解决方案"><span>UniFFI 的解决方案</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// 只需要这样写一次</span></span>
<span class="line"><span class="token attribute attr-name">#[uniffi::export]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> b<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span></span>
<span class="line">    a <span class="token operator">+</span> b</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// UniFFI 自动生成：</span></span>
<span class="line"><span class="token comment">// ✅ Kotlin 绑定</span></span>
<span class="line"><span class="token comment">// ✅ Swift 绑定  </span></span>
<span class="line"><span class="token comment">// ✅ Python 绑定</span></span>
<span class="line"><span class="token comment">// ✅ 所有必要的类型转换代码</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="uniffi-export-的含义" tabindex="-1"><a class="header-anchor" href="#uniffi-export-的含义"><span><code>#[uniffi::export]</code> 的含义</span></a></h2><p>这是一个<strong>过程宏</strong>（procedural macro），告诉 UniFFI：</p><blockquote><p>&quot;请为这个函数/结构体/枚举生成跨语言绑定代码&quot;</p></blockquote><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// 标记函数可以被其他语言调用</span></span>
<span class="line"><span class="token attribute attr-name">#[uniffi::export]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">greet</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, {}!&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 标记结构体可以被其他语言使用</span></span>
<span class="line"><span class="token attribute attr-name">#[derive(uniffi::Record)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">User</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">pub</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">pub</span> age<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 标记枚举</span></span>
<span class="line"><span class="token attribute attr-name">#[derive(uniffi::Enum)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">Status</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Active</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">Inactive</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="uniffi-的实现原理" tabindex="-1"><a class="header-anchor" href="#uniffi-的实现原理"><span>UniFFI 的实现原理</span></a></h2><h3 id="整体架构" tabindex="-1"><a class="header-anchor" href="#整体架构"><span>整体架构</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">┌─────────────────────────────────────────┐</span>
<span class="line">│         Rust 代码 + UniFFI 属性         │</span>
<span class="line">│   #[uniffi::export] fn hello() {...}   │</span>
<span class="line">└──────────────────┬──────────────────────┘</span>
<span class="line">                   │</span>
<span class="line">                   ↓</span>
<span class="line">         ┌─────────────────────┐</span>
<span class="line">         │  UniFFI 构建过程    │</span>
<span class="line">         │  1. 解析 UDL/宏     │</span>
<span class="line">         │  2. 生成 C-FFI 层   │</span>
<span class="line">         │  3. 生成绑定代码    │</span>
<span class="line">         └─────────┬───────────┘</span>
<span class="line">                   │</span>
<span class="line">         ┌─────────┴─────────┐</span>
<span class="line">         ↓                   ↓</span>
<span class="line">    ┌─────────┐         ┌─────────┐</span>
<span class="line">    │ Rust库  │         │ 绑定代码 │</span>
<span class="line">    │ (FFI)   │ ←────── │ 多语言   │</span>
<span class="line">    └─────────┘         └─────────┘</span>
<span class="line">         ↓                   ↓</span>
<span class="line">    Kotlin/Swift/Python 调用</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三层结构" tabindex="-1"><a class="header-anchor" href="#三层结构"><span>三层结构</span></a></h3><h4 id="_1-rust-核心层" tabindex="-1"><a class="header-anchor" href="#_1-rust-核心层"><span>1. <strong>Rust 核心层</strong></span></a></h4><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// 你写的业务逻辑</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">calculate_score</span><span class="token punctuation">(</span>points<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">u32</span> <span class="token punctuation">{</span></span>
<span class="line">    points <span class="token operator">*</span> <span class="token number">10</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-c-ffi-层-uniffi-自动生成" tabindex="-1"><a class="header-anchor" href="#_2-c-ffi-层-uniffi-自动生成"><span>2. <strong>C-FFI 层</strong>（UniFFI 自动生成）</span></a></h4><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// UniFFI 自动生成的 C 兼容接口</span></span>
<span class="line"><span class="token attribute attr-name">#[no_mangle]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">uniffi_mylib_fn_calculate_score</span><span class="token punctuation">(</span></span>
<span class="line">    points<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span></span>
<span class="line">    err<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token namespace">uniffi<span class="token punctuation">::</span></span><span class="token class-name">ExternError</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 错误处理</span></span>
<span class="line">    <span class="token comment">// 类型转换</span></span>
<span class="line">    <span class="token comment">// 调用真正的 Rust 函数</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-目标语言绑定层-uniffi-自动生成" tabindex="-1"><a class="header-anchor" href="#_3-目标语言绑定层-uniffi-自动生成"><span>3. <strong>目标语言绑定层</strong>（UniFFI 自动生成）</span></a></h4><p><strong>Kotlin:</strong></p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code><span class="line"><span class="token comment">// 自动生成的 Kotlin 代码</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">calculateScore</span><span class="token punctuation">(</span>points<span class="token operator">:</span> UInt<span class="token punctuation">)</span><span class="token operator">:</span> UInt <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 调用 C-FFI 层</span></span>
<span class="line">    <span class="token comment">// 处理错误</span></span>
<span class="line">    <span class="token comment">// 转换类型</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">_UniFFI_mylib_calculate_score</span><span class="token punctuation">(</span>points<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Swift:</strong></p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code><span class="line"><span class="token comment">// 自动生成的 Swift 代码</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function-definition function">calculateScore</span><span class="token punctuation">(</span>points<span class="token punctuation">:</span> <span class="token class-name">UInt32</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">UInt32</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">try</span><span class="token operator">!</span> rustCall <span class="token punctuation">{</span> </span>
<span class="line">        <span class="token function">uniffi_mylib_fn_calculate_score</span><span class="token punctuation">(</span>points<span class="token punctuation">,</span> <span class="token short-argument">$0</span><span class="token punctuation">)</span> </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Python:</strong></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 自动生成的 Python 代码</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">calculate_score</span><span class="token punctuation">(</span>points<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> _uniffi_rust_call<span class="token punctuation">(</span></span>
<span class="line">        _UniffiLib<span class="token punctuation">.</span>uniffi_mylib_fn_calculate_score<span class="token punctuation">,</span></span>
<span class="line">        points</span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实际使用例子" tabindex="-1"><a class="header-anchor" href="#实际使用例子"><span>实际使用例子</span></a></h2><h3 id="_1-基础项目设置" tabindex="-1"><a class="header-anchor" href="#_1-基础项目设置"><span>1. 基础项目设置</span></a></h3><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code><span class="line"><span class="token comment"># Cargo.toml</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token table class-name">package</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;mylib&quot;</span></span>
<span class="line"><span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.1.0&quot;</span></span>
<span class="line"><span class="token key property">edition</span> <span class="token punctuation">=</span> <span class="token string">&quot;2021&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span><span class="token table class-name">lib</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">crate-type</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;cdylib&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;staticlib&quot;</span><span class="token punctuation">]</span>  <span class="token comment"># 生成动态/静态库</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">uniffi</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.25&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span><span class="token table class-name">build-dependencies</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">uniffi</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.25&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;build&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-rust-代码" tabindex="-1"><a class="header-anchor" href="#_2-rust-代码"><span>2. Rust 代码</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// src/lib.rs</span></span>
<span class="line"><span class="token keyword">use</span> uniffi<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 导出简单函数</span></span>
<span class="line"><span class="token attribute attr-name">#[uniffi::export]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">greet</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, {}!&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 导出结构体</span></span>
<span class="line"><span class="token attribute attr-name">#[derive(uniffi::Record)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Person</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">pub</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">pub</span> age<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">pub</span> email<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>  <span class="token comment">// 支持 Option</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[uniffi::export]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">create_person</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Person</span> <span class="token punctuation">{</span></span>
<span class="line">        name<span class="token punctuation">,</span></span>
<span class="line">        age<span class="token punctuation">,</span></span>
<span class="line">        email<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 导出枚举</span></span>
<span class="line"><span class="token attribute attr-name">#[derive(uniffi::Enum)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">UserRole</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Admin</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">User</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">Guest</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 导出错误类型</span></span>
<span class="line"><span class="token attribute attr-name">#[derive(uniffi::Error)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">MyError</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">InvalidInput</span> <span class="token punctuation">{</span> message<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">NetworkError</span> <span class="token punctuation">{</span> code<span class="token punctuation">:</span> <span class="token keyword">i32</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[uniffi::export]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">validate_age</span><span class="token punctuation">(</span>age<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">,</span> <span class="token class-name">MyError</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">18</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Err</span><span class="token punctuation">(</span><span class="token class-name">MyError</span><span class="token punctuation">::</span><span class="token class-name">InvalidInput</span> <span class="token punctuation">{</span></span>
<span class="line">            message<span class="token punctuation">:</span> <span class="token string">&quot;年龄必须大于18岁&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 导出类（有状态的对象）</span></span>
<span class="line"><span class="token attribute attr-name">#[derive(uniffi::Object)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Counter</span> <span class="token punctuation">{</span></span>
<span class="line">    value<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[uniffi::export]</span></span>
<span class="line"><span class="token keyword">impl</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 构造函数</span></span>
<span class="line">    <span class="token attribute attr-name">#[uniffi::constructor]</span></span>
<span class="line">    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">new</span><span class="token punctuation">(</span>initial<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Counter</span> <span class="token punctuation">{</span> value<span class="token punctuation">:</span> initial <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 方法</span></span>
<span class="line">    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">increment</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get_value</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">u32</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span>value</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 必须：生成 UniFFI 脚手架代码</span></span>
<span class="line"><span class="token namespace">uniffi<span class="token punctuation">::</span></span><span class="token macro property">setup_scaffolding!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-构建配置" tabindex="-1"><a class="header-anchor" href="#_3-构建配置"><span>3. 构建配置</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// build.rs</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token namespace">uniffi<span class="token punctuation">::</span></span><span class="token function">generate_scaffolding</span><span class="token punctuation">(</span><span class="token string">&quot;src/mylib.udl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-在其他语言中使用" tabindex="-1"><a class="header-anchor" href="#_4-在其他语言中使用"><span>4. 在其他语言中使用</span></a></h3><h4 id="kotlin-android" tabindex="-1"><a class="header-anchor" href="#kotlin-android"><span>Kotlin (Android)</span></a></h4><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code><span class="line"><span class="token keyword">import</span> mylib<span class="token punctuation">.</span><span class="token operator">*</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 调用函数</span></span>
<span class="line">    <span class="token keyword">val</span> greeting <span class="token operator">=</span> <span class="token function">greet</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Alice&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span>greeting<span class="token punctuation">)</span>  <span class="token comment">// Hello, Alice!</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 使用结构体</span></span>
<span class="line">    <span class="token keyword">val</span> person <span class="token operator">=</span> <span class="token function">createPerson</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Bob&quot;</span></span><span class="token punctuation">,</span> 30u<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>name<span class="token punctuation">)</span>  <span class="token comment">// Bob</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 使用对象</span></span>
<span class="line">    <span class="token keyword">val</span> counter <span class="token operator">=</span> <span class="token function">Counter</span><span class="token punctuation">(</span>0u<span class="token punctuation">)</span></span>
<span class="line">    counter<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span>counter<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// 1</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 错误处理</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">validateAge</span><span class="token punctuation">(</span>15u<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> MyException<span class="token punctuation">.</span>InvalidInput<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>message<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="swift-ios" tabindex="-1"><a class="header-anchor" href="#swift-ios"><span>Swift (iOS)</span></a></h4><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code><span class="line"><span class="token keyword">import</span> mylib</span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> greeting <span class="token operator">=</span> <span class="token function">greet</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Alice&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span>greeting<span class="token punctuation">)</span>  <span class="token comment">// Hello, Alice!</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token function">createPerson</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Bob&quot;</span></span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>name<span class="token punctuation">)</span>  <span class="token comment">// Bob</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> counter <span class="token operator">=</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span>initial<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">counter<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span>counter<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// 1</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 错误处理</span></span>
<span class="line"><span class="token keyword">do</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token function">validateAge</span><span class="token punctuation">(</span>age<span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token class-name">MyError</span><span class="token punctuation">.</span><span class="token class-name">InvalidInput</span><span class="token punctuation">(</span><span class="token keyword">let</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> mylib <span class="token keyword">import</span> greet<span class="token punctuation">,</span> create_person<span class="token punctuation">,</span> Counter<span class="token punctuation">,</span> validate_age<span class="token punctuation">,</span> MyError</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 调用函数</span></span>
<span class="line">greeting <span class="token operator">=</span> greet<span class="token punctuation">(</span><span class="token string">&quot;Alice&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>greeting<span class="token punctuation">)</span>  <span class="token comment"># Hello, Alice!</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用结构体</span></span>
<span class="line">person <span class="token operator">=</span> create_person<span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>name<span class="token punctuation">)</span>  <span class="token comment"># Bob</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用对象</span></span>
<span class="line">counter <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">counter<span class="token punctuation">.</span>increment<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>counter<span class="token punctuation">.</span>get_value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 1</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 错误处理</span></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    validate_age<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> MyError<span class="token punctuation">.</span>InvalidInput <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>message<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="uniffi-的核心技术" tabindex="-1"><a class="header-anchor" href="#uniffi-的核心技术"><span>UniFFI 的核心技术</span></a></h2><h3 id="_1-类型映射" tabindex="-1"><a class="header-anchor" href="#_1-类型映射"><span>1. <strong>类型映射</strong></span></a></h3><table><thead><tr><th>Rust 类型</th><th>Kotlin</th><th>Swift</th><th>Python</th></tr></thead><tbody><tr><td><code>u32</code></td><td><code>UInt</code></td><td><code>UInt32</code></td><td><code>int</code></td></tr><tr><td><code>String</code></td><td><code>String</code></td><td><code>String</code></td><td><code>str</code></td></tr><tr><td><code>Vec&lt;T&gt;</code></td><td><code>List&lt;T&gt;</code></td><td><code>[T]</code></td><td><code>list[T]</code></td></tr><tr><td><code>Option&lt;T&gt;</code></td><td><code>T?</code></td><td><code>T?</code></td><td><code>Optional[T]</code></td></tr><tr><td><code>Result&lt;T, E&gt;</code></td><td>抛异常</td><td>抛异常</td><td>抛异常</td></tr></tbody></table><h3 id="_2-内存管理" tabindex="-1"><a class="header-anchor" href="#_2-内存管理"><span>2. <strong>内存管理</strong></span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// Rust 对象通过引用计数在跨语言边界传递</span></span>
<span class="line"><span class="token attribute attr-name">#[derive(uniffi::Object)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">MyObject</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Kotlin/Swift/Python 会持有一个指针</span></span>
<span class="line"><span class="token comment">// UniFFI 自动管理生命周期</span></span>
<span class="line"><span class="token comment">// 当外部对象被 GC 回收时，通知 Rust 释放内存</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-错误传播" tabindex="-1"><a class="header-anchor" href="#_3-错误传播"><span>3. <strong>错误传播</strong></span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// Rust 的 Result 自动转换为目标语言的异常</span></span>
<span class="line"><span class="token attribute attr-name">#[uniffi::export]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">may_fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">MyError</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Err</span><span class="token punctuation">(</span><span class="token class-name">MyError</span><span class="token punctuation">::</span><span class="token class-name">NetworkError</span> <span class="token punctuation">{</span> code<span class="token punctuation">:</span> <span class="token number">404</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Kotlin: 变成 try-catch</span></span>
<span class="line"><span class="token comment">// Swift: 变成 do-try-catch  </span></span>
<span class="line"><span class="token comment">// Python: 变成 try-except</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="uniffi-vs-其他方案" tabindex="-1"><a class="header-anchor" href="#uniffi-vs-其他方案"><span>UniFFI vs 其他方案</span></a></h2><table><thead><tr><th>方案</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><strong>UniFFI</strong></td><td>✅ 自动生成多语言绑定<br>✅ 类型安全<br>✅ 易于使用</td><td>❌ 仅支持部分语言<br>❌ 有性能开销</td></tr><tr><td><strong>手写 FFI</strong></td><td>✅ 最大性能<br>✅ 完全控制</td><td>❌ 极其繁琐<br>❌ 容易出错</td></tr><tr><td><strong>JNI (Java)</strong></td><td>✅ 官方支持</td><td>❌ 只支持 Java/Kotlin<br>❌ 代码冗长</td></tr><tr><td><strong>wasm-bindgen</strong></td><td>✅ Web 支持好</td><td>❌ 只支持 WebAssembly</td></tr></tbody></table><h2 id="实际应用场景" tabindex="-1"><a class="header-anchor" href="#实际应用场景"><span>实际应用场景</span></a></h2><h3 id="_1-移动应用共享核心逻辑" tabindex="-1"><a class="header-anchor" href="#_1-移动应用共享核心逻辑"><span>1. <strong>移动应用共享核心逻辑</strong></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">         Rust 核心库</span>
<span class="line">              │</span>
<span class="line">    ┌─────────┴─────────┐</span>
<span class="line">    ↓                   ↓</span>
<span class="line">Android App         iOS App</span>
<span class="line">(Kotlin)           (Swift)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-python-加速" tabindex="-1"><a class="header-anchor" href="#_2-python-加速"><span>2. <strong>Python 加速</strong></span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># CPU 密集型任务用 Rust 实现</span></span>
<span class="line"><span class="token comment"># 从 Python 调用获得原生性能</span></span>
<span class="line"><span class="token keyword">import</span> mylib</span>
<span class="line">result <span class="token operator">=</span> mylib<span class="token punctuation">.</span>heavy_computation<span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-跨平台-cli-工具" tabindex="-1"><a class="header-anchor" href="#_3-跨平台-cli-工具"><span>3. <strong>跨平台 CLI 工具</strong></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">Rust 核心</span>
<span class="line">  │</span>
<span class="line">  ├─→ 直接编译为可执行文件</span>
<span class="line">  ├─→ Python 绑定（pip 安装）</span>
<span class="line">  └─→ Node.js 绑定（npm 安装）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实战项目示例-密码管理器" tabindex="-1"><a class="header-anchor" href="#实战项目示例-密码管理器"><span>实战项目示例：密码管理器</span></a></h2><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">use</span> uniffi<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[derive(uniffi::Record)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Credential</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">pub</span> username<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">pub</span> encrypted_password<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">pub</span> website<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[derive(uniffi::Object)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">PasswordManager</span> <span class="token punctuation">{</span></span>
<span class="line">    credentials<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">Credential</span><span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[uniffi::export]</span></span>
<span class="line"><span class="token keyword">impl</span> <span class="token class-name">PasswordManager</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute attr-name">#[uniffi::constructor]</span></span>
<span class="line">    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">PasswordManager</span> <span class="token punctuation">{</span></span>
<span class="line">            credentials<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">add_credential</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> cred<span class="token punctuation">:</span> <span class="token class-name">Credential</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span>credentials<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cred<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get_all</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">Credential</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span>credentials<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token namespace">uniffi<span class="token punctuation">::</span></span><span class="token macro property">setup_scaffolding!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在 iOS、Android、Python 中都可以使用同样的密码管理逻辑！</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p><strong>UniFFI</strong> 让你能够：</p><ul><li>🦀 用 Rust 写核心逻辑（安全、高性能）</li><li>📱 在多个平台复用同一份代码</li><li>🔄 自动生成类型安全的绑定</li><li>⚡ 减少跨语言调用的样板代码</li></ul>`,64)])])}const o=s(t,[["render",l]]),u=JSON.parse('{"path":"/rust_p/07_Uniffi/uniffi__export.html","title":"UniFFI 详解","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"什么是 UniFFI","slug":"什么是-uniffi","link":"#什么是-uniffi","children":[]},{"level":2,"title":"为什么需要 UniFFI","slug":"为什么需要-uniffi","link":"#为什么需要-uniffi","children":[{"level":3,"title":"传统的跨语言调用问题","slug":"传统的跨语言调用问题","link":"#传统的跨语言调用问题","children":[]},{"level":3,"title":"UniFFI 的解决方案","slug":"uniffi-的解决方案","link":"#uniffi-的解决方案","children":[]}]},{"level":2,"title":"#[uniffi::export] 的含义","slug":"uniffi-export-的含义","link":"#uniffi-export-的含义","children":[]},{"level":2,"title":"UniFFI 的实现原理","slug":"uniffi-的实现原理","link":"#uniffi-的实现原理","children":[{"level":3,"title":"整体架构","slug":"整体架构","link":"#整体架构","children":[]},{"level":3,"title":"三层结构","slug":"三层结构","link":"#三层结构","children":[]}]},{"level":2,"title":"实际使用例子","slug":"实际使用例子","link":"#实际使用例子","children":[{"level":3,"title":"1. 基础项目设置","slug":"_1-基础项目设置","link":"#_1-基础项目设置","children":[]},{"level":3,"title":"2. Rust 代码","slug":"_2-rust-代码","link":"#_2-rust-代码","children":[]},{"level":3,"title":"3. 构建配置","slug":"_3-构建配置","link":"#_3-构建配置","children":[]},{"level":3,"title":"4. 在其他语言中使用","slug":"_4-在其他语言中使用","link":"#_4-在其他语言中使用","children":[]}]},{"level":2,"title":"UniFFI 的核心技术","slug":"uniffi-的核心技术","link":"#uniffi-的核心技术","children":[{"level":3,"title":"1. 类型映射","slug":"_1-类型映射","link":"#_1-类型映射","children":[]},{"level":3,"title":"2. 内存管理","slug":"_2-内存管理","link":"#_2-内存管理","children":[]},{"level":3,"title":"3. 错误传播","slug":"_3-错误传播","link":"#_3-错误传播","children":[]}]},{"level":2,"title":"UniFFI vs 其他方案","slug":"uniffi-vs-其他方案","link":"#uniffi-vs-其他方案","children":[]},{"level":2,"title":"实际应用场景","slug":"实际应用场景","link":"#实际应用场景","children":[{"level":3,"title":"1. 移动应用共享核心逻辑","slug":"_1-移动应用共享核心逻辑","link":"#_1-移动应用共享核心逻辑","children":[]},{"level":3,"title":"2. Python 加速","slug":"_2-python-加速","link":"#_2-python-加速","children":[]},{"level":3,"title":"3. 跨平台 CLI 工具","slug":"_3-跨平台-cli-工具","link":"#_3-跨平台-cli-工具","children":[]}]},{"level":2,"title":"实战项目示例：密码管理器","slug":"实战项目示例-密码管理器","link":"#实战项目示例-密码管理器","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"updatedTime":1761491612000,"contributors":[{"name":"uponup","username":"uponup","email":"1030360567@qq.com","commits":1,"url":"https://github.com/uponup"}],"changelog":[{"hash":"5456040ee4b483f78ba6a68a1887ff67ab3316c6","time":1761491612000,"email":"1030360567@qq.com","author":"uponup","message":"fix rust"}]},"filePathRelative":"rust_p/07_Uniffi/uniffi::export.md"}');export{o as comp,u as data};
