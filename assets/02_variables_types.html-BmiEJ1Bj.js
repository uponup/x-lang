import{_ as s,c as a,b as p,o as e}from"./app-WzcM213c.js";const t={};function l(o,n){return e(),a("div",null,[...n[0]||(n[0]=[p(`<h1 id="变量和数据类型" tabindex="-1"><a class="header-anchor" href="#变量和数据类型"><span>变量和数据类型</span></a></h1><h2 id="变量声明" tabindex="-1"><a class="header-anchor" href="#变量声明"><span>变量声明</span></a></h2><h3 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法"><span>基本语法</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 不可变变量（默认）</span></span>
<span class="line">    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;x的值是: {}&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 可变变量</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token keyword">mut</span> y <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">    y <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;y的值是: {}&quot;</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 重新绑定（shadowing）</span></span>
<span class="line">    <span class="token keyword">let</span> z <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> z <span class="token operator">=</span> z <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// 新的z变量</span></span>
<span class="line">    <span class="token keyword">let</span> z <span class="token operator">=</span> z <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;z的值是: {}&quot;</span><span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="变量命名规则" tabindex="-1"><a class="header-anchor" href="#变量命名规则"><span>变量命名规则</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 使用下划线命名</span></span>
<span class="line">    <span class="token keyword">let</span> user_name <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> user_age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 常量（全大写）</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token constant">MAX_POINTS</span><span class="token punctuation">:</span> <span class="token keyword">u32</span> <span class="token operator">=</span> <span class="token number">100_000</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 类型注解</span></span>
<span class="line">    <span class="token keyword">let</span> count<span class="token punctuation">:</span> <span class="token keyword">i32</span> <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> price<span class="token punctuation">:</span> <span class="token keyword">f64</span> <span class="token operator">=</span> <span class="token number">99.99</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> is_active<span class="token punctuation">:</span> <span class="token keyword">bool</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本数据类型" tabindex="-1"><a class="header-anchor" href="#基本数据类型"><span>基本数据类型</span></a></h2><h3 id="_1-整数类型" tabindex="-1"><a class="header-anchor" href="#_1-整数类型"><span>1. 整数类型</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 有符号整数</span></span>
<span class="line">    <span class="token keyword">let</span> a<span class="token punctuation">:</span> <span class="token keyword">i8</span> <span class="token operator">=</span> <span class="token number">127</span><span class="token punctuation">;</span>      <span class="token comment">// 8位，-128到127</span></span>
<span class="line">    <span class="token keyword">let</span> b<span class="token punctuation">:</span> <span class="token keyword">i16</span> <span class="token operator">=</span> <span class="token number">32767</span><span class="token punctuation">;</span>   <span class="token comment">// 16位</span></span>
<span class="line">    <span class="token keyword">let</span> c<span class="token punctuation">:</span> <span class="token keyword">i32</span> <span class="token operator">=</span> <span class="token number">2147483647</span><span class="token punctuation">;</span> <span class="token comment">// 32位（默认）</span></span>
<span class="line">    <span class="token keyword">let</span> d<span class="token punctuation">:</span> <span class="token keyword">i64</span> <span class="token operator">=</span> <span class="token number">9223372036854775807</span><span class="token punctuation">;</span> <span class="token comment">// 64位</span></span>
<span class="line">    <span class="token keyword">let</span> e<span class="token punctuation">:</span> <span class="token keyword">i128</span> <span class="token operator">=</span> <span class="token number">170141183460469231731687303715884105727</span><span class="token punctuation">;</span> <span class="token comment">// 128位</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 无符号整数</span></span>
<span class="line">    <span class="token keyword">let</span> f<span class="token punctuation">:</span> <span class="token keyword">u8</span> <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">;</span>      <span class="token comment">// 8位，0到255</span></span>
<span class="line">    <span class="token keyword">let</span> g<span class="token punctuation">:</span> <span class="token keyword">u16</span> <span class="token operator">=</span> <span class="token number">65535</span><span class="token punctuation">;</span>   <span class="token comment">// 16位</span></span>
<span class="line">    <span class="token keyword">let</span> h<span class="token punctuation">:</span> <span class="token keyword">u32</span> <span class="token operator">=</span> <span class="token number">4294967295</span><span class="token punctuation">;</span> <span class="token comment">// 32位</span></span>
<span class="line">    <span class="token keyword">let</span> i<span class="token punctuation">:</span> <span class="token keyword">u64</span> <span class="token operator">=</span> <span class="token number">18446744073709551615</span><span class="token punctuation">;</span> <span class="token comment">// 64位</span></span>
<span class="line">    <span class="token keyword">let</span> j<span class="token punctuation">:</span> <span class="token keyword">u128</span> <span class="token operator">=</span> <span class="token number">340282366920938463463374607431768211455</span><span class="token punctuation">;</span> <span class="token comment">// 128位</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 根据系统架构</span></span>
<span class="line">    <span class="token keyword">let</span> k<span class="token punctuation">:</span> <span class="token keyword">isize</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>   <span class="token comment">// 32位或64位</span></span>
<span class="line">    <span class="token keyword">let</span> l<span class="token punctuation">:</span> <span class="token keyword">usize</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>   <span class="token comment">// 32位或64位</span></span>
<span class="line">    </span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;整数示例: {}&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-浮点数类型" tabindex="-1"><a class="header-anchor" href="#_2-浮点数类型"><span>2. 浮点数类型</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> x<span class="token punctuation">:</span> <span class="token keyword">f32</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>    <span class="token comment">// 32位浮点数</span></span>
<span class="line">    <span class="token keyword">let</span> y<span class="token punctuation">:</span> <span class="token keyword">f64</span> <span class="token operator">=</span> <span class="token number">3.14159265359</span><span class="token punctuation">;</span> <span class="token comment">// 64位浮点数（默认）</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 数学运算</span></span>
<span class="line">    <span class="token keyword">let</span> sum <span class="token operator">=</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> diff <span class="token operator">=</span> y <span class="token operator">-</span> x<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> product <span class="token operator">=</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> quotient <span class="token operator">=</span> y <span class="token operator">/</span> x<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;浮点数运算: {} + {} = {}&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;除法: {} / {} = {}&quot;</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> x<span class="token punctuation">,</span> quotient<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-布尔类型" tabindex="-1"><a class="header-anchor" href="#_3-布尔类型"><span>3. 布尔类型</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> f<span class="token punctuation">:</span> <span class="token keyword">bool</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 布尔运算</span></span>
<span class="line">    <span class="token keyword">let</span> and_result <span class="token operator">=</span> t <span class="token operator">&amp;&amp;</span> f<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> or_result <span class="token operator">=</span> t <span class="token operator">||</span> f<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> not_result <span class="token operator">=</span> <span class="token operator">!</span>t<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;布尔运算: {} &amp;&amp; {} = {}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> f<span class="token punctuation">,</span> and_result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;逻辑非: !{} = {}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> not_result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-字符类型" tabindex="-1"><a class="header-anchor" href="#_4-字符类型"><span>4. 字符类型</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token char">&#39;z&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> z <span class="token operator">=</span> <span class="token char">&#39;ℤ&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> heart_eyed_cat <span class="token operator">=</span> &#39;😻&#39;<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> chinese_char <span class="token operator">=</span> <span class="token char">&#39;中&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;字符示例: {}, {}, {}, {}&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> z<span class="token punctuation">,</span> heart_eyed_cat<span class="token punctuation">,</span> chinese_char<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="复合类型" tabindex="-1"><a class="header-anchor" href="#复合类型"><span>复合类型</span></a></h2><h3 id="_1-元组-tuple" tabindex="-1"><a class="header-anchor" href="#_1-元组-tuple"><span>1. 元组（Tuple）</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 创建元组</span></span>
<span class="line">    <span class="token keyword">let</span> tup<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">,</span> <span class="token keyword">f64</span><span class="token punctuation">,</span> <span class="token keyword">u8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">6.4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 解构元组</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span> <span class="token operator">=</span> tup<span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;元组解构: x={}, y={}, z={}&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 通过索引访问</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;第一个元素: {}&quot;</span><span class="token punctuation">,</span> tup<span class="token number">.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;第二个元素: {}&quot;</span><span class="token punctuation">,</span> tup<span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;第三个元素: {}&quot;</span><span class="token punctuation">,</span> tup<span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 函数返回多个值</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token punctuation">(</span>sum<span class="token punctuation">,</span> product<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;和: {}, 积: {}&quot;</span><span class="token punctuation">,</span> sum<span class="token punctuation">,</span> product<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">calculate</span><span class="token punctuation">(</span>a<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> b<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">,</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">,</span> a <span class="token operator">*</span> b<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-数组-array" tabindex="-1"><a class="header-anchor" href="#_2-数组-array"><span>2. 数组（Array）</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 创建数组</span></span>
<span class="line">    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> months <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;一月&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;二月&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;三月&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;四月&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;五月&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;六月&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                  <span class="token string">&quot;七月&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;八月&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;九月&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;十月&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;十一月&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;十二月&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 指定类型和长度</span></span>
<span class="line">    <span class="token keyword">let</span> b<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">;</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">;</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 等同于 [3, 3, 3, 3, 3]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 访问数组元素</span></span>
<span class="line">    <span class="token keyword">let</span> first <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> second <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> last <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;数组元素: {}, {}, {}&quot;</span><span class="token punctuation">,</span> first<span class="token punctuation">,</span> second<span class="token punctuation">,</span> last<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;第一个月: {}&quot;</span><span class="token punctuation">,</span> months<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 数组长度</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;数组长度: {}&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="练习1-变量和类型" tabindex="-1"><a class="header-anchor" href="#练习1-变量和类型"><span>练习1：变量和类型</span></a></h2><p>创建一个程序，声明不同类型的变量并进行基本运算：</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 在这里添加您的代码</span></span>
<span class="line">    <span class="token comment">// 1. 声明整数、浮点数、布尔值、字符变量</span></span>
<span class="line">    <span class="token comment">// 2. 进行数学运算</span></span>
<span class="line">    <span class="token comment">// 3. 创建元组和数组</span></span>
<span class="line">    <span class="token comment">// 4. 输出结果</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="答案" tabindex="-1"><a class="header-anchor" href="#答案"><span>答案</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 1. 基本类型变量</span></span>
<span class="line">    <span class="token keyword">let</span> age<span class="token punctuation">:</span> <span class="token keyword">u8</span> <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> height<span class="token punctuation">:</span> <span class="token keyword">f32</span> <span class="token operator">=</span> <span class="token number">175.5</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> is_student<span class="token punctuation">:</span> <span class="token keyword">bool</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> grade<span class="token punctuation">:</span> <span class="token keyword">char</span> <span class="token operator">=</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 2. 数学运算</span></span>
<span class="line">    <span class="token keyword">let</span> weight<span class="token punctuation">:</span> <span class="token keyword">f32</span> <span class="token operator">=</span> <span class="token number">70.0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> bmi <span class="token operator">=</span> weight <span class="token operator">/</span> <span class="token punctuation">(</span>height <span class="token operator">/</span> <span class="token number">100.0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">powi</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 3. 元组</span></span>
<span class="line">    <span class="token keyword">let</span> person_info <span class="token operator">=</span> <span class="token punctuation">(</span>age<span class="token punctuation">,</span> height<span class="token punctuation">,</span> is_student<span class="token punctuation">,</span> grade<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token punctuation">(</span>person_age<span class="token punctuation">,</span> person_height<span class="token punctuation">,</span> student_status<span class="token punctuation">,</span> person_grade<span class="token punctuation">)</span> <span class="token operator">=</span> person_info<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 4. 数组</span></span>
<span class="line">    <span class="token keyword">let</span> scores <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> average <span class="token operator">=</span> <span class="token punctuation">(</span>scores<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> scores<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> scores<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> scores<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> scores<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">f32</span> <span class="token operator">/</span> <span class="token number">5.0</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 输出结果</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;个人信息:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;年龄: {}&quot;</span><span class="token punctuation">,</span> person_age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;身高: {}cm&quot;</span><span class="token punctuation">,</span> person_height<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;是否学生: {}&quot;</span><span class="token punctuation">,</span> student_status<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;等级: {}&quot;</span><span class="token punctuation">,</span> person_grade<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;BMI: {:.2}&quot;</span><span class="token punctuation">,</span> bmi<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;平均分: {:.1}&quot;</span><span class="token punctuation">,</span> average<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="练习2-类型转换" tabindex="-1"><a class="header-anchor" href="#练习2-类型转换"><span>练习2：类型转换</span></a></h2><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 实现以下转换</span></span>
<span class="line">    <span class="token keyword">let</span> integer <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> float <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 1. 整数转浮点数</span></span>
<span class="line">    <span class="token comment">// 2. 浮点数转整数（截断）</span></span>
<span class="line">    <span class="token comment">// 3. 字符转整数（ASCII值）</span></span>
<span class="line">    <span class="token comment">// 4. 整数转字符</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="答案-1" tabindex="-1"><a class="header-anchor" href="#答案-1"><span>答案</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> integer <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> float <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 1. 整数转浮点数</span></span>
<span class="line">    <span class="token keyword">let</span> int_to_float <span class="token operator">=</span> integer <span class="token keyword">as</span> <span class="token keyword">f64</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 2. 浮点数转整数（截断）</span></span>
<span class="line">    <span class="token keyword">let</span> float_to_int <span class="token operator">=</span> float <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 3. 字符转整数（ASCII值）</span></span>
<span class="line">    <span class="token keyword">let</span> char_to_int <span class="token operator">=</span> <span class="token char">&#39;A&#39;</span> <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 4. 整数转字符</span></span>
<span class="line">    <span class="token keyword">let</span> int_to_char <span class="token operator">=</span> <span class="token number">65</span> <span class="token keyword">as</span> <span class="token keyword">char</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;整数转浮点数: {} -&gt; {}&quot;</span><span class="token punctuation">,</span> integer<span class="token punctuation">,</span> int_to_float<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;浮点数转整数: {} -&gt; {}&quot;</span><span class="token punctuation">,</span> float<span class="token punctuation">,</span> float_to_int<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;字符转整数: &#39;A&#39; -&gt; {}&quot;</span><span class="token punctuation">,</span> char_to_int<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;整数转字符: 65 -&gt; &#39;{}&#39;&quot;</span><span class="token punctuation">,</span> int_to_char<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="下一步" tabindex="-1"><a class="header-anchor" href="#下一步"><span>下一步</span></a></h2><p>现在您已经掌握了Rust的基本数据类型。接下来我们将学习控制流，包括条件语句和循环。</p>`,31)])])}const i=s(t,[["render",l]]),u=JSON.parse('{"path":"/rust_p/01_basics/02_variables_types.html","title":"变量和数据类型","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"变量声明","slug":"变量声明","link":"#变量声明","children":[{"level":3,"title":"基本语法","slug":"基本语法","link":"#基本语法","children":[]},{"level":3,"title":"变量命名规则","slug":"变量命名规则","link":"#变量命名规则","children":[]}]},{"level":2,"title":"基本数据类型","slug":"基本数据类型","link":"#基本数据类型","children":[{"level":3,"title":"1. 整数类型","slug":"_1-整数类型","link":"#_1-整数类型","children":[]},{"level":3,"title":"2. 浮点数类型","slug":"_2-浮点数类型","link":"#_2-浮点数类型","children":[]},{"level":3,"title":"3. 布尔类型","slug":"_3-布尔类型","link":"#_3-布尔类型","children":[]},{"level":3,"title":"4. 字符类型","slug":"_4-字符类型","link":"#_4-字符类型","children":[]}]},{"level":2,"title":"复合类型","slug":"复合类型","link":"#复合类型","children":[{"level":3,"title":"1. 元组（Tuple）","slug":"_1-元组-tuple","link":"#_1-元组-tuple","children":[]},{"level":3,"title":"2. 数组（Array）","slug":"_2-数组-array","link":"#_2-数组-array","children":[]}]},{"level":2,"title":"练习1：变量和类型","slug":"练习1-变量和类型","link":"#练习1-变量和类型","children":[{"level":3,"title":"答案","slug":"答案","link":"#答案","children":[]}]},{"level":2,"title":"练习2：类型转换","slug":"练习2-类型转换","link":"#练习2-类型转换","children":[{"level":3,"title":"答案","slug":"答案-1","link":"#答案-1","children":[]}]},{"level":2,"title":"下一步","slug":"下一步","link":"#下一步","children":[]}],"git":{"updatedTime":1760760973000,"contributors":[{"name":"jinpeng.gao","username":"","email":"jinpeng.gao@okg.com","commits":1}],"changelog":[{"hash":"d70ba6dad61962cc67cf67d5fa022d37518a27a1","time":1760760973000,"email":"jinpeng.gao@okg.com","author":"jinpeng.gao","message":"fix"}]},"filePathRelative":"rust_p/01_basics/02_variables_types.md"}');export{i as comp,u as data};
