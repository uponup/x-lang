import{_ as e,c as n,b as i,o as a}from"./app-CZKSgHGg.js";const l={};function r(d,s){return a(),n("div",null,[...s[0]||(s[0]=[i(`<p>在 Rust 中，<code>mod.rs</code> 和 <code>lib.rs</code> 有以下区别：</p><h2 id="lib-rs" tabindex="-1"><a class="header-anchor" href="#lib-rs"><span><strong>lib.rs</strong></span></a></h2><ul><li><strong>库的根文件</strong>（crate root）</li><li>定义一个库 crate 的入口点</li><li>在 <code>Cargo.toml</code> 中通过 <code>[lib]</code> 配置指定</li><li>一个项目通常只有一个 <code>lib.rs</code></li><li>用于导出整个库的公共 API</li></ul><h2 id="mod-rs" tabindex="-1"><a class="header-anchor" href="#mod-rs"><span><strong>mod.rs</strong></span></a></h2><ul><li><strong>模块目录的入口文件</strong></li><li>用于将一个目录组织成一个模块</li><li>可以有多个 <code>mod.rs</code> 文件（在不同的子目录中）</li><li>从 Rust 2018 版本开始，可以用与目录同名的 <code>.rs</code> 文件替代</li></ul><h2 id="在你的项目中的例子" tabindex="-1"><a class="header-anchor" href="#在你的项目中的例子"><span><strong>在你的项目中的例子：</strong></span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">components/lib.rs                          # 整个 components 库的根入口</span>
<span class="line">components/biz-service/mod.rs              # biz-service 模块的入口</span>
<span class="line">components/foundation/mod.rs               # foundation 模块的入口</span>
<span class="line">components/platform-service/mod.rs         # platform-service 模块的入口</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例"><span><strong>使用示例：</strong></span></a></h2><p><strong>传统方式（使用 mod.rs）：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">my_module/</span>
<span class="line">  ├── mod.rs        # 模块入口</span>
<span class="line">  ├── submodule1.rs</span>
<span class="line">  └── submodule2.rs</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>现代方式（Rust 2018+）：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">my_module.rs        # 直接用文件名作为模块</span>
<span class="line">my_module/</span>
<span class="line">  ├── submodule1.rs</span>
<span class="line">  └── submodule2.rs</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在你当前查看的 <code>components/biz-service/dex/src/request/ai_summary/mod.rs</code> 中，这个 <code>mod.rs</code> 文件就是 <code>ai_summary</code> 模块的入口文件，用于组织和导出该模块的内容。</p>`,13)])])}const t=e(l,[["render",r]]),c=JSON.parse('{"path":"/rust_p/06_others/mod_rs%E5%92%8Clib_rs%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"lib.rs","slug":"lib-rs","link":"#lib-rs","children":[]},{"level":2,"title":"mod.rs","slug":"mod-rs","link":"#mod-rs","children":[]},{"level":2,"title":"在你的项目中的例子：","slug":"在你的项目中的例子","link":"#在你的项目中的例子","children":[]},{"level":2,"title":"使用示例：","slug":"使用示例","link":"#使用示例","children":[]}],"git":{"updatedTime":1760760973000,"contributors":[{"name":"jinpeng.gao","username":"","email":"jinpeng.gao@okg.com","commits":1}],"changelog":[{"hash":"d70ba6dad61962cc67cf67d5fa022d37518a27a1","time":1760760973000,"email":"jinpeng.gao@okg.com","author":"jinpeng.gao","message":"fix"}]},"filePathRelative":"rust_p/06_others/mod_rs和lib_rs的区别.md"}');export{t as comp,c as data};
