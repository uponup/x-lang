import{_ as s,c as a,b as e,o as t}from"./app-WzcM213c.js";const p={};function l(i,n){return t(),a("div",null,[...n[0]||(n[0]=[e(`<p>让我为你详细介绍 Rust 的 <strong>Attribute（属性）</strong> 语法。</p><p>[2 tools called]</p><h1 id="rust-attribute-属性-语法完整指南" tabindex="-1"><a class="header-anchor" href="#rust-attribute-属性-语法完整指南"><span>Rust Attribute（属性）语法完整指南</span></a></h1><h2 id="一、什么是-attribute" tabindex="-1"><a class="header-anchor" href="#一、什么是-attribute"><span><strong>一、什么是 Attribute？</strong></span></a></h2><p>Attribute 是 Rust 的元数据注解，用于：</p><ul><li>控制编译器行为</li><li>自动生成代码</li><li>配置条件编译</li><li>添加文档</li><li>标记测试函数</li></ul><h2 id="二、基本语法" tabindex="-1"><a class="header-anchor" href="#二、基本语法"><span><strong>二、基本语法</strong></span></a></h2><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// 1. 外部属性 - 作用于下一个项目</span></span>
<span class="line"><span class="token attribute attr-name">#[attribute]</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token type-definition class-name">MyStruct</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. 内部属性 - 作用于包含它的项目</span></span>
<span class="line"><span class="token attribute attr-name">#![attribute]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 3. 带参数的属性</span></span>
<span class="line"><span class="token attribute attr-name">#[attribute(param)]</span></span>
<span class="line"><span class="token attribute attr-name">#[attribute(key = <span class="token string">&quot;value&quot;</span>)]</span></span>
<span class="line"><span class="token attribute attr-name">#[attribute(param1, param2)]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 4. 多行属性</span></span>
<span class="line"><span class="token attribute attr-name">#[attribute1]</span></span>
<span class="line"><span class="token attribute attr-name">#[attribute2]</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token type-definition class-name">MyStruct</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、常见的内置-attribute" tabindex="-1"><a class="header-anchor" href="#三、常见的内置-attribute"><span><strong>三、常见的内置 Attribute</strong></span></a></h2><h3 id="_1-derive-自动实现-trait" tabindex="-1"><a class="header-anchor" href="#_1-derive-自动实现-trait"><span><strong>1. <code>#[derive(...)]</code> - 自动实现 trait</strong></span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// 从你的项目中：</span></span>
<span class="line"><span class="token attribute attr-name">#[derive(Debug, Clone, Serialize, Deserialize, Record, Default)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">DexSummaryDetail</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">pub</span> summary<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常见的派生 trait：</p><ul><li><code>Debug</code> - 调试打印（<code>{:?}</code>）</li><li><code>Clone</code> - 克隆能力</li><li><code>Copy</code> - 按位复制</li><li><code>PartialEq</code> / <code>Eq</code> - 相等比较</li><li><code>PartialOrd</code> / <code>Ord</code> - 排序比较</li><li><code>Default</code> - 默认值</li><li><code>Hash</code> - 哈希能力</li></ul><h3 id="_2-cfg-条件编译" tabindex="-1"><a class="header-anchor" href="#_2-cfg-条件编译"><span><strong>2. <code>#[cfg(...)]</code> - 条件编译</strong></span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// 仅在测试时编译</span></span>
<span class="line"><span class="token attribute attr-name">#[cfg(test)]</span></span>
<span class="line"><span class="token keyword">mod</span> <span class="token module-declaration namespace">tests</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 仅在 Unix 系统编译</span></span>
<span class="line"><span class="token attribute attr-name">#[cfg(target_os = <span class="token string">&quot;unix&quot;</span>)]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">unix_only</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 仅在 debug 模式</span></span>
<span class="line"><span class="token attribute attr-name">#[cfg(debug_assertions)]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">debug_only</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 仅在 Android 平台</span></span>
<span class="line"><span class="token attribute attr-name">#[cfg(target_os = <span class="token string">&quot;android&quot;</span>)]</span></span>
<span class="line"><span class="token keyword">use</span> jni<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-test-测试函数" tabindex="-1"><a class="header-anchor" href="#_3-test-测试函数"><span><strong>3. <code>#[test]</code> - 测试函数</strong></span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token attribute attr-name">#[test]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">test_something</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[test]</span></span>
<span class="line"><span class="token attribute attr-name">#[ignore]</span>  <span class="token comment">// 默认跳过此测试</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">expensive_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-allow-warn-deny-控制-lint" tabindex="-1"><a class="header-anchor" href="#_4-allow-warn-deny-控制-lint"><span><strong>4. <code>#[allow(...)]</code> / <code>#[warn(...)]</code> / <code>#[deny(...)]</code> - 控制 lint</strong></span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// 允许未使用的变量</span></span>
<span class="line"><span class="token attribute attr-name">#[allow(unused_variables)]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 警告废弃的代码</span></span>
<span class="line"><span class="token attribute attr-name">#[warn(deprecated)]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 禁止不安全代码</span></span>
<span class="line"><span class="token attribute attr-name">#[deny(unsafe_code)]</span></span>
<span class="line"><span class="token keyword">mod</span> <span class="token module-declaration namespace">safe_module</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-deprecated-标记废弃" tabindex="-1"><a class="header-anchor" href="#_5-deprecated-标记废弃"><span><strong>5. <code>#[deprecated]</code> - 标记废弃</strong></span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token attribute attr-name">#[deprecated(since = <span class="token string">&quot;1.0.0&quot;</span>, note = <span class="token string">&quot;请使用 new_function 代替&quot;</span>)]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">old_function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-inline-内联提示" tabindex="-1"><a class="header-anchor" href="#_6-inline-内联提示"><span><strong>6. <code>#[inline]</code> - 内联提示</strong></span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// 建议内联</span></span>
<span class="line"><span class="token attribute attr-name">#[inline]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">small_function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 始终内联</span></span>
<span class="line"><span class="token attribute attr-name">#[inline(always)]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">must_inline</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 从不内联</span></span>
<span class="line"><span class="token attribute attr-name">#[inline(never)]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">never_inline</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、第三方库的-attribute" tabindex="-1"><a class="header-anchor" href="#四、第三方库的-attribute"><span><strong>四、第三方库的 Attribute</strong></span></a></h2><h3 id="_1-serde-序列化-反序列化" tabindex="-1"><a class="header-anchor" href="#_1-serde-序列化-反序列化"><span><strong>1. Serde - 序列化/反序列化</strong></span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// 从你的项目中：</span></span>
<span class="line"><span class="token attribute attr-name">#[derive(Serialize, Deserialize)]</span></span>
<span class="line"><span class="token attribute attr-name">#[serde(rename_all = <span class="token string">&quot;camelCase&quot;</span>, default)]</span>  <span class="token comment">// 容器级属性</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">DexSummaryData</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute attr-name">#[serde(default, deserialize_with = <span class="token string">&quot;de_opt_string_from_int_or_str&quot;</span>)]</span>  <span class="token comment">// 字段级属性</span></span>
<span class="line">    <span class="token keyword">pub</span> beta<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常用 serde 属性：</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token attribute attr-name">#[serde(rename = <span class="token string">&quot;newName&quot;</span>)]</span>           <span class="token comment">// 重命名字段</span></span>
<span class="line"><span class="token attribute attr-name">#[serde(rename_all = <span class="token string">&quot;camelCase&quot;</span>)]</span>     <span class="token comment">// 批量重命名</span></span>
<span class="line"><span class="token attribute attr-name">#[serde(skip)]</span>                         <span class="token comment">// 跳过序列化</span></span>
<span class="line"><span class="token attribute attr-name">#[serde(skip_serializing_if = <span class="token string">&quot;...&quot;</span>)]</span>  <span class="token comment">// 条件跳过</span></span>
<span class="line"><span class="token attribute attr-name">#[serde(default)]</span>                      <span class="token comment">// 使用默认值</span></span>
<span class="line"><span class="token attribute attr-name">#[serde(flatten)]</span>                      <span class="token comment">// 展平嵌套结构</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-thiserror-错误处理" tabindex="-1"><a class="header-anchor" href="#_2-thiserror-错误处理"><span><strong>2. Thiserror - 错误处理</strong></span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// 从你的项目中：</span></span>
<span class="line"><span class="token attribute attr-name">#[derive(Debug, thiserror::Error)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">GatewayError</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute attr-name">#[error(<span class="token string">&quot;network: {0}&quot;</span>)]</span></span>
<span class="line">    <span class="token class-name">Network</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    </span>
<span class="line">    <span class="token attribute attr-name">#[error(<span class="token string">&quot;parse: {0}&quot;</span>)]</span></span>
<span class="line">    <span class="token class-name">Parse</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    </span>
<span class="line">    <span class="token attribute attr-name">#[error(<span class="token string">&quot;request factory not registered&quot;</span>)]</span></span>
<span class="line">    <span class="token class-name">NoFactory</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-uniffi-跨语言绑定" tabindex="-1"><a class="header-anchor" href="#_3-uniffi-跨语言绑定"><span><strong>3. UniFFI - 跨语言绑定</strong></span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token attribute attr-name">#[derive(uniffi::Record)]</span>  <span class="token comment">// 生成 FFI 绑定</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">DexSummaryDetail</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">pub</span> summary<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[derive(uniffi::Error)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">MyError</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">NetworkError</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-tokio-异步运行时" tabindex="-1"><a class="header-anchor" href="#_4-tokio-异步运行时"><span><strong>4. Tokio - 异步运行时</strong></span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token comment">// 异步测试</span></span>
<span class="line"><span class="token attribute attr-name">#[tokio::test]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">async_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 异步代码</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 异步主函数</span></span>
<span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 异步代码</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、完整示例-从你的项目" tabindex="-1"><a class="header-anchor" href="#五、完整示例-从你的项目"><span><strong>五、完整示例（从你的项目）</strong></span></a></h2><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">serde<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Deserialize</span><span class="token punctuation">,</span> <span class="token class-name">Serialize</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token namespace">uniffi<span class="token punctuation">::</span></span><span class="token class-name">Record</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 多个 derive 宏</span></span>
<span class="line"><span class="token attribute attr-name">#[derive(Debug, Clone, Serialize, Deserialize, Record, Default)]</span></span>
<span class="line"><span class="token comment">// serde 配置</span></span>
<span class="line"><span class="token attribute attr-name">#[serde(rename_all = <span class="token string">&quot;camelCase&quot;</span>, default)]</span></span>
<span class="line"><span class="token comment">// 自定义可见性</span></span>
<span class="line"><span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>biz_service<span class="token punctuation">::</span></span>dex<span class="token punctuation">)</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">DexSummaryDetail</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>biz_service<span class="token punctuation">::</span></span>dex<span class="token punctuation">)</span> summary<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>biz_service<span class="token punctuation">::</span></span>dex<span class="token punctuation">)</span> translated_summary<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>biz_service<span class="token punctuation">::</span></span>dex<span class="token punctuation">)</span> updated_time<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[derive(Debug, Clone, Serialize, Deserialize, Record, Default)]</span></span>
<span class="line"><span class="token attribute attr-name">#[serde(rename_all = <span class="token string">&quot;camelCase&quot;</span>, default)]</span></span>
<span class="line"><span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>biz_service<span class="token punctuation">::</span></span>dex<span class="token punctuation">)</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">DexSummaryData</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 字段级 serde 配置</span></span>
<span class="line">    <span class="token attribute attr-name">#[serde(default, deserialize_with = <span class="token string">&quot;de_opt_string_from_int_or_str&quot;</span>)]</span></span>
<span class="line">    <span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>biz_service<span class="token punctuation">::</span></span>dex<span class="token punctuation">)</span> beta<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>biz_service<span class="token punctuation">::</span></span>dex<span class="token punctuation">)</span> mention_detail<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>biz_service<span class="token punctuation">::</span></span>dex<span class="token punctuation">)</span> summary_detail<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">DexSummaryDetail</span><span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36)])])}const o=s(p,[["render",l]]),r=JSON.parse('{"path":"/rust_p/06_others/Attribute%E8%AF%AD%E6%B3%95.html","title":"Rust Attribute（属性）语法完整指南","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、什么是 Attribute？","slug":"一、什么是-attribute","link":"#一、什么是-attribute","children":[]},{"level":2,"title":"二、基本语法","slug":"二、基本语法","link":"#二、基本语法","children":[]},{"level":2,"title":"三、常见的内置 Attribute","slug":"三、常见的内置-attribute","link":"#三、常见的内置-attribute","children":[{"level":3,"title":"1. #[derive(...)] - 自动实现 trait","slug":"_1-derive-自动实现-trait","link":"#_1-derive-自动实现-trait","children":[]},{"level":3,"title":"2. #[cfg(...)] - 条件编译","slug":"_2-cfg-条件编译","link":"#_2-cfg-条件编译","children":[]},{"level":3,"title":"3. #[test] - 测试函数","slug":"_3-test-测试函数","link":"#_3-test-测试函数","children":[]},{"level":3,"title":"4. #[allow(...)] / #[warn(...)] / #[deny(...)] - 控制 lint","slug":"_4-allow-warn-deny-控制-lint","link":"#_4-allow-warn-deny-控制-lint","children":[]},{"level":3,"title":"5. #[deprecated] - 标记废弃","slug":"_5-deprecated-标记废弃","link":"#_5-deprecated-标记废弃","children":[]},{"level":3,"title":"6. #[inline] - 内联提示","slug":"_6-inline-内联提示","link":"#_6-inline-内联提示","children":[]}]},{"level":2,"title":"四、第三方库的 Attribute","slug":"四、第三方库的-attribute","link":"#四、第三方库的-attribute","children":[{"level":3,"title":"1. Serde - 序列化/反序列化","slug":"_1-serde-序列化-反序列化","link":"#_1-serde-序列化-反序列化","children":[]},{"level":3,"title":"2. Thiserror - 错误处理","slug":"_2-thiserror-错误处理","link":"#_2-thiserror-错误处理","children":[]},{"level":3,"title":"3. UniFFI - 跨语言绑定","slug":"_3-uniffi-跨语言绑定","link":"#_3-uniffi-跨语言绑定","children":[]},{"level":3,"title":"4. Tokio - 异步运行时","slug":"_4-tokio-异步运行时","link":"#_4-tokio-异步运行时","children":[]}]},{"level":2,"title":"五、完整示例（从你的项目）","slug":"五、完整示例-从你的项目","link":"#五、完整示例-从你的项目","children":[]}],"git":{"updatedTime":1760760973000,"contributors":[{"name":"jinpeng.gao","username":"","email":"jinpeng.gao@okg.com","commits":1}],"changelog":[{"hash":"d70ba6dad61962cc67cf67d5fa022d37518a27a1","time":1760760973000,"email":"jinpeng.gao@okg.com","author":"jinpeng.gao","message":"fix"}]},"filePathRelative":"rust_p/06_others/Attribute语法.md"}');export{o as comp,r as data};
