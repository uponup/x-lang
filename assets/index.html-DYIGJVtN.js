import{_ as p,c as o,b as t,a as s,e as a,d as l,w as i,r as c,o as u}from"./app-WzcM213c.js";const r={};function d(k,n){const e=c("RouteLink");return u(),o("div",null,[n[10]||(n[10]=t('<h1 id="tokio-异步编程完整教程" tabindex="-1"><a class="header-anchor" href="#tokio-异步编程完整教程"><span>Tokio 异步编程完整教程</span></a></h1><h2 id="欢迎来到-tokio-异步编程世界-🚀" tabindex="-1"><a class="header-anchor" href="#欢迎来到-tokio-异步编程世界-🚀"><span>欢迎来到 Tokio 异步编程世界！🚀</span></a></h2><p>这是一套从零到精通的 Tokio 异步编程教程，涵盖了从基础概念到实战项目的完整内容。</p><h2 id="📚-学习路径" tabindex="-1"><a class="header-anchor" href="#📚-学习路径"><span>📚 学习路径</span></a></h2><h3 id="🌱-第一步-理解-tokio" tabindex="-1"><a class="header-anchor" href="#🌱-第一步-理解-tokio"><span>🌱 第一步：理解 Tokio</span></a></h3>',5)),s("p",null,[s("strong",null,[l(e,{to:"/rust_p/08_async/01_tokio_intro.html"},{default:i(()=>[...n[0]||(n[0]=[a("01_tokio_intro.md",-1)])]),_:1})]),n[1]||(n[1]=a(" - Tokio 入门",-1))]),n[11]||(n[11]=t('<ul><li>什么是 Tokio？</li><li>为什么需要异步编程？</li><li>Tokio 的核心组件</li><li>安装和配置</li><li>何时使用 Tokio</li></ul><p><strong>关键要点</strong>：</p><ul><li>异步 vs 同步的区别</li><li>Tokio 的优势</li><li>适用场景判断</li></ul><hr><h3 id="📖-第二步-掌握-async-await" tabindex="-1"><a class="header-anchor" href="#📖-第二步-掌握-async-await"><span>📖 第二步：掌握 async/await</span></a></h3>',5)),s("p",null,[s("strong",null,[l(e,{to:"/rust_p/08_async/02_async_basics.html"},{default:i(()=>[...n[2]||(n[2]=[a("02_async_basics.md",-1)])]),_:1})]),n[3]||(n[3]=a(" - 异步编程基础",-1))]),n[12]||(n[12]=t(`<ul><li>async 和 await 关键字</li><li>Future 是什么</li><li>并发执行</li><li>错误处理</li><li>生命周期</li></ul><p><strong>关键要点</strong>：</p><ul><li><code>async fn</code> 创建 Future</li><li><code>.await</code> 等待 Future</li><li>并发 vs 顺序执行</li><li>使用 <code>join!</code> 和 <code>select!</code></li></ul><p><strong>实践练习</strong>：</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> task1 <span class="token operator">=</span> <span class="token namespace">tokio<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">{</span> <span class="token string">&quot;任务1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> task2 <span class="token operator">=</span> <span class="token namespace">tokio<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">{</span> <span class="token string">&quot;任务2&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">let</span> <span class="token punctuation">(</span>r1<span class="token punctuation">,</span> r2<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">tokio<span class="token punctuation">::</span></span><span class="token macro property">join!</span><span class="token punctuation">(</span>task1<span class="token punctuation">,</span> task2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}, {:?}&quot;</span><span class="token punctuation">,</span> r1<span class="token punctuation">,</span> r2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="⚙️-第三步-深入-runtime" tabindex="-1"><a class="header-anchor" href="#⚙️-第三步-深入-runtime"><span>⚙️ 第三步：深入 Runtime</span></a></h3>`,7)),s("p",null,[s("strong",null,[l(e,{to:"/rust_p/08_async/03_tokio_runtime.html"},{default:i(()=>[...n[4]||(n[4]=[a("03_tokio_runtime.md",-1)])]),_:1})]),n[5]||(n[5]=a(" - Tokio Runtime 详解",-1))]),n[13]||(n[13]=t(`<ul><li>Runtime 类型（单线程 vs 多线程）</li><li>创建和配置 Runtime</li><li>任务调度</li><li>性能调优</li><li>生命周期管理</li></ul><p><strong>关键要点</strong>：</p><ul><li>选择合适的 Runtime</li><li>使用 <code>spawn_blocking</code> 处理阻塞操作</li><li>配置工作线程数</li><li>优雅关闭</li></ul><p><strong>配置示例</strong>：</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">tokio<span class="token punctuation">::</span>runtime<span class="token punctuation">::</span></span><span class="token class-name">Builder</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> rt <span class="token operator">=</span> <span class="token class-name">Builder</span><span class="token punctuation">::</span><span class="token function">new_multi_thread</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">worker_threads</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">enable_all</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="🔄-第四步-了解生态" tabindex="-1"><a class="header-anchor" href="#🔄-第四步-了解生态"><span>🔄 第四步：了解生态</span></a></h3>`,7)),s("p",null,[s("strong",null,[l(e,{to:"/rust_p/08_async/04_tokio_vs_others.html"},{default:i(()=>[...n[6]||(n[6]=[a("04_tokio_vs_others.md",-1)])]),_:1})]),n[7]||(n[7]=a(" - Tokio vs 其他运行时",-1))]),n[14]||(n[14]=t('<ul><li>Tokio vs async-std vs smol</li><li>性能对比</li><li>生态系统对比</li><li>选择指南</li><li>迁移指南</li></ul><p><strong>关键要点</strong>：</p><ul><li>Tokio 是生产环境首选</li><li>async-std 适合学习</li><li>smol 适合快速编译</li><li>根据需求选择</li></ul><p><strong>对比表</strong>：</p><table><thead><tr><th>特性</th><th>Tokio</th><th>async-std</th><th>smol</th></tr></thead><tbody><tr><td>生态</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐</td><td>⭐⭐</td></tr><tr><td>性能</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐⭐</td></tr><tr><td>易用</td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐</td></tr></tbody></table><hr><h3 id="🛠️-第五步-实战项目" tabindex="-1"><a class="header-anchor" href="#🛠️-第五步-实战项目"><span>🛠️ 第五步：实战项目</span></a></h3>',7)),s("p",null,[s("strong",null,[l(e,{to:"/rust_p/08_async/05_projects.html"},{default:i(()=>[...n[8]||(n[8]=[a("05_projects.md",-1)])]),_:1})]),n[9]||(n[9]=a(" - 实战项目",-1))]),n[15]||(n[15]=t(`<p><strong>6 个完整项目</strong>：</p><ol><li>异步 HTTP 服务器（Axum）</li><li>并发文件处理器</li><li>WebSocket 聊天服务器</li><li>数据库连接池</li><li>定时任务调度器</li><li>API 请求聚合器</li></ol><p><strong>每个项目包含</strong>：</p><ul><li>✅ 完整可运行的代码</li><li>✅ 依赖配置</li><li>✅ 测试方法</li><li>✅ 最佳实践</li></ul><hr><h2 id="🎯-学习目标" tabindex="-1"><a class="header-anchor" href="#🎯-学习目标"><span>🎯 学习目标</span></a></h2><p>完成这套教程后，你将能够：</p><ul><li>✅ 理解异步编程的核心概念</li><li>✅ 熟练使用 async/await 语法</li><li>✅ 配置和优化 Tokio Runtime</li><li>✅ 构建高性能的异步应用</li><li>✅ 选择合适的异步运行时</li><li>✅ 应用最佳实践</li><li>✅ 独立完成实战项目</li></ul><hr><h2 id="📅-建议学习计划" tabindex="-1"><a class="header-anchor" href="#📅-建议学习计划"><span>📅 建议学习计划</span></a></h2><h3 id="第-1-天-基础入门-2-3-小时" tabindex="-1"><a class="header-anchor" href="#第-1-天-基础入门-2-3-小时"><span>第 1 天：基础入门（2-3 小时）</span></a></h3><ul><li>阅读 Tokio 入门</li><li>理解异步编程基础</li><li>完成简单的 async/await 练习</li></ul><h3 id="第-2-天-深入理解-3-4-小时" tabindex="-1"><a class="header-anchor" href="#第-2-天-深入理解-3-4-小时"><span>第 2 天：深入理解（3-4 小时）</span></a></h3><ul><li>学习 Runtime 概念</li><li>实践并发任务管理</li><li>了解其他运行时对比</li></ul><h3 id="第-3-天-实战练习-4-5-小时" tabindex="-1"><a class="header-anchor" href="#第-3-天-实战练习-4-5-小时"><span>第 3 天：实战练习（4-5 小时）</span></a></h3><ul><li>完成项目 1-3</li><li>理解 Web 服务器构建</li><li>掌握实时通信</li></ul><h3 id="第-4-天-进阶应用-4-5-小时" tabindex="-1"><a class="header-anchor" href="#第-4-天-进阶应用-4-5-小时"><span>第 4 天：进阶应用（4-5 小时）</span></a></h3><ul><li>完成项目 4-6</li><li>学习数据库集成</li><li>掌握任务调度</li></ul><hr><h2 id="🔧-环境准备" tabindex="-1"><a class="header-anchor" href="#🔧-环境准备"><span>🔧 环境准备</span></a></h2><h3 id="_1-安装-rust" tabindex="-1"><a class="header-anchor" href="#_1-安装-rust"><span>1. 安装 Rust</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">--proto</span> <span class="token string">&#39;=https&#39;</span> <span class="token parameter variable">--tlsv1.2</span> <span class="token parameter variable">-sSf</span> https://sh.rustup.rs <span class="token operator">|</span> <span class="token function">sh</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-创建项目" tabindex="-1"><a class="header-anchor" href="#_2-创建项目"><span>2. 创建项目</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">cargo</span> new tokio-demo</span>
<span class="line"><span class="token builtin class-name">cd</span> tokio-demo</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-添加依赖" tabindex="-1"><a class="header-anchor" href="#_3-添加依赖"><span>3. 添加依赖</span></a></h3><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">tokio</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;full&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-第一个程序" tabindex="-1"><a class="header-anchor" href="#_4-第一个程序"><span>4. 第一个程序</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, Tokio!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🚀-快速开始" tabindex="-1"><a class="header-anchor" href="#🚀-快速开始"><span>🚀 快速开始</span></a></h2><h3 id="最简示例" tabindex="-1"><a class="header-anchor" href="#最简示例"><span>最简示例</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">tokio<span class="token punctuation">::</span>time<span class="token punctuation">::</span></span><span class="token punctuation">{</span>sleep<span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;开始&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_secs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;1 秒后&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="并发示例" tabindex="-1"><a class="header-anchor" href="#并发示例"><span>并发示例</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> task1 <span class="token operator">=</span> <span class="token namespace">tokio<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;任务 1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">let</span> task2 <span class="token operator">=</span> <span class="token namespace">tokio<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;任务 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    task1<span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    task2<span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="http-服务器示例" tabindex="-1"><a class="header-anchor" href="#http-服务器示例"><span>HTTP 服务器示例</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">axum<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">routing<span class="token punctuation">::</span></span>get<span class="token punctuation">,</span> <span class="token class-name">Router</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token class-name">Router</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token keyword">async</span> <span class="token punctuation">{</span> <span class="token string">&quot;Hello!&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">let</span> listener <span class="token operator">=</span> <span class="token namespace">tokio<span class="token punctuation">::</span>net<span class="token punctuation">::</span></span><span class="token class-name">TcpListener</span><span class="token punctuation">::</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1:3000&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token keyword">await</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token namespace">axum<span class="token punctuation">::</span></span><span class="token function">serve</span><span class="token punctuation">(</span>listener<span class="token punctuation">,</span> app<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="📖-补充资源" tabindex="-1"><a class="header-anchor" href="#📖-补充资源"><span>📖 补充资源</span></a></h2><h3 id="官方文档" tabindex="-1"><a class="header-anchor" href="#官方文档"><span>官方文档</span></a></h3><ul><li><a href="https://tokio.rs/" target="_blank" rel="noopener noreferrer">Tokio 官方网站</a></li><li><a href="https://tokio.rs/tokio/tutorial" target="_blank" rel="noopener noreferrer">Tokio 教程</a></li><li><a href="https://docs.rs/tokio/" target="_blank" rel="noopener noreferrer">API 文档</a></li></ul><h3 id="社区资源" tabindex="-1"><a class="header-anchor" href="#社区资源"><span>社区资源</span></a></h3><ul><li><a href="https://discord.gg/tokio" target="_blank" rel="noopener noreferrer">Tokio Discord</a></li><li><a href="https://rust-lang.github.io/async-book/" target="_blank" rel="noopener noreferrer">Rust 异步编程书</a></li><li><a href="https://github.com/tokio-rs/tokio" target="_blank" rel="noopener noreferrer">Tokio GitHub</a></li></ul><h3 id="相关库" tabindex="-1"><a class="header-anchor" href="#相关库"><span>相关库</span></a></h3><ul><li><a href="https://github.com/tokio-rs/axum" target="_blank" rel="noopener noreferrer">Axum</a> - Web 框架</li><li><a href="https://github.com/hyperium/tonic" target="_blank" rel="noopener noreferrer">Tonic</a> - gRPC</li><li><a href="https://github.com/seanmonstar/reqwest" target="_blank" rel="noopener noreferrer">reqwest</a> - HTTP 客户端</li><li><a href="https://github.com/launchbadge/sqlx" target="_blank" rel="noopener noreferrer">sqlx</a> - 异步 SQL</li></ul><hr><h2 id="💡-学习技巧" tabindex="-1"><a class="header-anchor" href="#💡-学习技巧"><span>💡 学习技巧</span></a></h2><ol><li><strong>动手实践</strong>：不要只看代码，一定要运行</li><li><strong>循序渐进</strong>：按顺序学习，不要跳跃</li><li><strong>对比理解</strong>：同步 vs 异步的区别</li><li><strong>调试技巧</strong>：使用 <code>println!</code> 和 <code>dbg!</code> 调试</li><li><strong>阅读文档</strong>：遇到问题查官方文档</li><li><strong>实战项目</strong>：完成所有示例项目</li></ol><hr><h2 id="❓-常见问题" tabindex="-1"><a class="header-anchor" href="#❓-常见问题"><span>❓ 常见问题</span></a></h2><h3 id="q1-什么时候用异步" tabindex="-1"><a class="header-anchor" href="#q1-什么时候用异步"><span>Q1: 什么时候用异步？</span></a></h3><p><strong>A</strong>: I/O 密集型任务（网络、文件、数据库）</p><h3 id="q2-异步一定比同步快吗" tabindex="-1"><a class="header-anchor" href="#q2-异步一定比同步快吗"><span>Q2: 异步一定比同步快吗？</span></a></h3><p><strong>A</strong>: 不一定。CPU 密集型任务用同步更好。</p><h3 id="q3-如何处理阻塞操作" tabindex="-1"><a class="header-anchor" href="#q3-如何处理阻塞操作"><span>Q3: 如何处理阻塞操作？</span></a></h3><p><strong>A</strong>: 使用 <code>tokio::task::spawn_blocking</code></p><h3 id="q4-如何调试异步代码" tabindex="-1"><a class="header-anchor" href="#q4-如何调试异步代码"><span>Q4: 如何调试异步代码？</span></a></h3><p><strong>A</strong>: 使用 <code>tokio-console</code> 或 <code>tracing</code></p><h3 id="q5-tokio-vs-async-std-选哪个" tabindex="-1"><a class="header-anchor" href="#q5-tokio-vs-async-std-选哪个"><span>Q5: Tokio vs async-std 选哪个？</span></a></h3><p><strong>A</strong>: 生产环境优先选 Tokio</p><hr><h2 id="🎓-评估测试" tabindex="-1"><a class="header-anchor" href="#🎓-评估测试"><span>🎓 评估测试</span></a></h2><p>完成学习后，尝试独立完成：</p><h3 id="初级-掌握基础" tabindex="-1"><a class="header-anchor" href="#初级-掌握基础"><span>初级（掌握基础）</span></a></h3><ul><li>[ ] 创建一个简单的异步程序</li><li>[ ] 使用 <code>async/await</code> 编写函数</li><li>[ ] 并发执行多个任务</li></ul><h3 id="中级-理解原理" tabindex="-1"><a class="header-anchor" href="#中级-理解原理"><span>中级（理解原理）</span></a></h3><ul><li>[ ] 配置自定义 Runtime</li><li>[ ] 实现超时和重试机制</li><li>[ ] 构建简单的 HTTP 服务器</li></ul><h3 id="高级-实战应用" tabindex="-1"><a class="header-anchor" href="#高级-实战应用"><span>高级（实战应用）</span></a></h3><ul><li>[ ] 构建完整的 Web API</li><li>[ ] 实现 WebSocket 通信</li><li>[ ] 集成数据库并处理并发</li></ul><hr><h2 id="🌟-下一步" tabindex="-1"><a class="header-anchor" href="#🌟-下一步"><span>🌟 下一步</span></a></h2><p>完成 Tokio 学习后，可以探索：</p><ul><li><strong>Web 框架</strong>：Axum、Actix-web</li><li><strong>数据库</strong>：sqlx、tokio-postgres</li><li><strong>消息队列</strong>：lapin (RabbitMQ)</li><li><strong>gRPC</strong>：tonic</li><li><strong>监控</strong>：tracing、tokio-console</li></ul><hr><h2 id="📝-反馈和贡献" tabindex="-1"><a class="header-anchor" href="#📝-反馈和贡献"><span>📝 反馈和贡献</span></a></h2><p>如果你发现问题或有改进建议，欢迎：</p><ul><li>提出 Issue</li><li>提交 Pull Request</li><li>分享学习心得</li></ul><hr><p><strong>祝你学习愉快！Happy Coding! 🦀⚡</strong></p>`,78))])}const m=p(r,[["render",d]]),v=JSON.parse('{"path":"/rust_p/08_async/","title":"Tokio 异步编程完整教程","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"欢迎来到 Tokio 异步编程世界！🚀","slug":"欢迎来到-tokio-异步编程世界-🚀","link":"#欢迎来到-tokio-异步编程世界-🚀","children":[]},{"level":2,"title":"📚 学习路径","slug":"📚-学习路径","link":"#📚-学习路径","children":[{"level":3,"title":"🌱 第一步：理解 Tokio","slug":"🌱-第一步-理解-tokio","link":"#🌱-第一步-理解-tokio","children":[]},{"level":3,"title":"📖 第二步：掌握 async/await","slug":"📖-第二步-掌握-async-await","link":"#📖-第二步-掌握-async-await","children":[]},{"level":3,"title":"⚙️ 第三步：深入 Runtime","slug":"⚙️-第三步-深入-runtime","link":"#⚙️-第三步-深入-runtime","children":[]},{"level":3,"title":"🔄 第四步：了解生态","slug":"🔄-第四步-了解生态","link":"#🔄-第四步-了解生态","children":[]},{"level":3,"title":"🛠️ 第五步：实战项目","slug":"🛠️-第五步-实战项目","link":"#🛠️-第五步-实战项目","children":[]}]},{"level":2,"title":"🎯 学习目标","slug":"🎯-学习目标","link":"#🎯-学习目标","children":[]},{"level":2,"title":"📅 建议学习计划","slug":"📅-建议学习计划","link":"#📅-建议学习计划","children":[{"level":3,"title":"第 1 天：基础入门（2-3 小时）","slug":"第-1-天-基础入门-2-3-小时","link":"#第-1-天-基础入门-2-3-小时","children":[]},{"level":3,"title":"第 2 天：深入理解（3-4 小时）","slug":"第-2-天-深入理解-3-4-小时","link":"#第-2-天-深入理解-3-4-小时","children":[]},{"level":3,"title":"第 3 天：实战练习（4-5 小时）","slug":"第-3-天-实战练习-4-5-小时","link":"#第-3-天-实战练习-4-5-小时","children":[]},{"level":3,"title":"第 4 天：进阶应用（4-5 小时）","slug":"第-4-天-进阶应用-4-5-小时","link":"#第-4-天-进阶应用-4-5-小时","children":[]}]},{"level":2,"title":"🔧 环境准备","slug":"🔧-环境准备","link":"#🔧-环境准备","children":[{"level":3,"title":"1. 安装 Rust","slug":"_1-安装-rust","link":"#_1-安装-rust","children":[]},{"level":3,"title":"2. 创建项目","slug":"_2-创建项目","link":"#_2-创建项目","children":[]},{"level":3,"title":"3. 添加依赖","slug":"_3-添加依赖","link":"#_3-添加依赖","children":[]},{"level":3,"title":"4. 第一个程序","slug":"_4-第一个程序","link":"#_4-第一个程序","children":[]}]},{"level":2,"title":"🚀 快速开始","slug":"🚀-快速开始","link":"#🚀-快速开始","children":[{"level":3,"title":"最简示例","slug":"最简示例","link":"#最简示例","children":[]},{"level":3,"title":"并发示例","slug":"并发示例","link":"#并发示例","children":[]},{"level":3,"title":"HTTP 服务器示例","slug":"http-服务器示例","link":"#http-服务器示例","children":[]}]},{"level":2,"title":"📖 补充资源","slug":"📖-补充资源","link":"#📖-补充资源","children":[{"level":3,"title":"官方文档","slug":"官方文档","link":"#官方文档","children":[]},{"level":3,"title":"社区资源","slug":"社区资源","link":"#社区资源","children":[]},{"level":3,"title":"相关库","slug":"相关库","link":"#相关库","children":[]}]},{"level":2,"title":"💡 学习技巧","slug":"💡-学习技巧","link":"#💡-学习技巧","children":[]},{"level":2,"title":"❓ 常见问题","slug":"❓-常见问题","link":"#❓-常见问题","children":[{"level":3,"title":"Q1: 什么时候用异步？","slug":"q1-什么时候用异步","link":"#q1-什么时候用异步","children":[]},{"level":3,"title":"Q2: 异步一定比同步快吗？","slug":"q2-异步一定比同步快吗","link":"#q2-异步一定比同步快吗","children":[]},{"level":3,"title":"Q3: 如何处理阻塞操作？","slug":"q3-如何处理阻塞操作","link":"#q3-如何处理阻塞操作","children":[]},{"level":3,"title":"Q4: 如何调试异步代码？","slug":"q4-如何调试异步代码","link":"#q4-如何调试异步代码","children":[]},{"level":3,"title":"Q5: Tokio vs async-std 选哪个？","slug":"q5-tokio-vs-async-std-选哪个","link":"#q5-tokio-vs-async-std-选哪个","children":[]}]},{"level":2,"title":"🎓 评估测试","slug":"🎓-评估测试","link":"#🎓-评估测试","children":[{"level":3,"title":"初级（掌握基础）","slug":"初级-掌握基础","link":"#初级-掌握基础","children":[]},{"level":3,"title":"中级（理解原理）","slug":"中级-理解原理","link":"#中级-理解原理","children":[]},{"level":3,"title":"高级（实战应用）","slug":"高级-实战应用","link":"#高级-实战应用","children":[]}]},{"level":2,"title":"🌟 下一步","slug":"🌟-下一步","link":"#🌟-下一步","children":[]},{"level":2,"title":"📝 反馈和贡献","slug":"📝-反馈和贡献","link":"#📝-反馈和贡献","children":[]}],"git":{"updatedTime":1761491612000,"contributors":[{"name":"uponup","username":"uponup","email":"1030360567@qq.com","commits":1,"url":"https://github.com/uponup"}],"changelog":[{"hash":"5456040ee4b483f78ba6a68a1887ff67ab3316c6","time":1761491612000,"email":"1030360567@qq.com","author":"uponup","message":"fix rust"}]},"filePathRelative":"rust_p/08_async/README.md"}');export{m as comp,v as data};
